<metro:MetroWindow x:Class="UiPathEJC.UserInterfaces.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UiPathEJC.UserInterfaces.Windows"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:design="clr-namespace:UiPathEJC.UserInterfaces.Windows.ViewModels.Design"
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:controls="clr-namespace:MaterialDesignExtensions.Controls;assembly=MaterialDesignExtensions"
        xmlns:converters="clr-namespace:UiPathEJC.Components.Converters"
        xmlns:viewModels="clr-namespace:UiPathEJC.UserInterfaces.Views.ViewModels"
        xmlns:views="clr-namespace:UiPathEJC.UserInterfaces.Views"
        xmlns:interface="clr-namespace:UiPathEJC.UserInterfaces.Interface"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        WindowStartupLocation="CenterScreen"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        NonActiveWindowTitleBrush="{DynamicResource BrushesUiPathColor}"
        mc:Ignorable="d"
        Title="Easy Job Control for UiPath" Height="450" Width="800"
        IconEdgeMode="Aliased" TitleCharacterCasing="Normal" TitleAlignment="Center"
        TitlebarHeight="35" ShowDialogsOverTitleBar="True"
        MinWidth="500" MinHeight="400" d:DataContext="{d:DesignInstance design:DesignMainViewModel}"
        Icon="../../Resources/Styles/Images/UiPath-Logo.png">
    <Window.Resources>
        <converters:BooleanToVisibilityConverter x:Key="ToVisibilityConverter" />
        <converters:InvertBoolConverter x:Key="InvertBoolConverter" />

        <DataTemplate DataType="{x:Type viewModels:FastStartViewModel}">
            <views:FastStartView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModels:SettingsViewModel}">
            <views:SettingsView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModels:UiPathProcessViewModel}">
            <views:UiPathProcessesView />
        </DataTemplate>
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <materialDesign:DialogHost Margin="0,-35,0,0" x:Name="LoginDialogHost" IsOpen="{Binding Path=CurrentContent.IsDialogOpen}" DialogContent="{Binding Path=CurrentContent.DialogContent}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="35"></RowDefinition>
                <RowDefinition Height="Auto" MinHeight="64"></RowDefinition>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <controls:AppBar Grid.Row="1" Margin="-10,0,0,0" x:Name="AppBar" 
                             ShowShadow="False" Type="Default" ShowNavigationDrawerButton="false"
                             ShowBackButton="False" 
                             Title="{Binding Path=CurrentContent.ViewName}" Grid.RowSpan="2">
                <controls:AppBar.AppIcon>
                    <materialDesign:PackIcon Margin="-5,-1,0,0" Width="30" Height="30" Kind="{Binding Path=CurrentContent.IconSource}"></materialDesign:PackIcon>
                </controls:AppBar.AppIcon>
                <Button Style="{StaticResource MaterialDesignToolForegroundButton}" Margin="8,0" ToolTip="Easy Job Control for UiPath on Github" >
                    <materialDesign:PackIcon Kind="GithubCircle" Height="24" Width="24" />
                </Button>
                <Button Style="{StaticResource MaterialDesignToolForegroundButton}" Margin="8,0" ToolTip="Documentation">
                    <materialDesign:PackIcon Kind="DotsVertical" Height="24" Width="24" />
                </Button>
            </controls:AppBar>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="250"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" BorderThickness="0,0,1,0" BorderBrush="{DynamicResource MaterialDesignDivider}">
                    <controls:SideNavigation x:Name="SideNav" Items="{Binding Path=NavigationItems}"
                                             Style="{DynamicResource MaterialSideNavigationSemicircle}" >
                        <controls:SideNavigation.Resources>
                            <DataTemplate x:Key="ViewModelTemplate" DataType="{x:Type interface:IContentViewModel}">
                                <Grid Height="48">
                                    <Border Style="{StaticResource navigationItemBackgroundBorderStyle}" />
                                    <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="16,0,0,0">
                                        <Grid Height="24" VerticalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="24" />
                                                <ColumnDefinition Width="100*" />
                                            </Grid.ColumnDefinitions>
                                            <ContentControl Content="{Binding Path=IconSource}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Focusable="False">
                                                <ContentControl.Resources>
                                                    <DataTemplate DataType="{x:Type BitmapImage}">
                                                        <Image HorizontalAlignment="Stretch" Source="{Binding}" SnapsToDevicePixels="True" VerticalAlignment="Stretch" />
                                                    </DataTemplate>
                                                    <DataTemplate DataType="{x:Type materialDesign:PackIconKind}">
                                                        <materialDesign:PackIcon Kind="{Binding}" Height="24" Width="24" />
                                                    </DataTemplate>
                                                </ContentControl.Resources>
                                                <ContentControl.Style>
                                                    <Style TargetType="{x:Type ContentControl}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignNavigationItemIcon}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                                                <Setter Property="Foreground" Value="{Binding Path=SelectionForeground, RelativeSource={RelativeSource AncestorType={x:Type controls:SideNavigation}}}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ContentControl.Style>
                                            </ContentControl>
                                            <TextBlock Grid.Column="1" FontSize="14" FontWeight="Bold" Text="{Binding Path=ShortName}" TextTrimming="CharacterEllipsis"
                                                       Margin="32,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignNavigationItemText}" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                                                <Setter Property="Foreground" Value="{Binding Path=SelectionForeground, RelativeSource={RelativeSource AncestorType={x:Type controls:SideNavigation}}}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type viewModels:FastStartViewModel}">
                                <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource ViewModelTemplate}"></ContentPresenter>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type viewModels:UiPathSchedulerViewModel}">
                                <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource ViewModelTemplate}"></ContentPresenter>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type viewModels:UiPathProcessViewModel}">
                                <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource ViewModelTemplate}"></ContentPresenter>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type viewModels:SettingsViewModel}">
                                <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource ViewModelTemplate}"></ContentPresenter>
                            </DataTemplate>
                        </controls:SideNavigation.Resources>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="NavigationItemSelected">
                                <i:InvokeCommandAction Command="{Binding ViewUpdatedCommand}"></i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </controls:SideNavigation>
                </Border>
                <ContentControl x:Name="ContentControl" Content="{Binding Path=CurrentContent}" Grid.Column="1"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            </Grid>
        </Grid>
    </materialDesign:DialogHost>

    <metro:MetroWindow.IsCloseButtonEnabled>
        <Binding Path="IsOpen" ElementName="LoginDialogHost" Converter="{StaticResource InvertBoolConverter}" IsAsync="True"/>
    </metro:MetroWindow.IsCloseButtonEnabled>

    <metro:MetroWindow.IsMinButtonEnabled>
        <Binding Path="IsOpen" ElementName="LoginDialogHost" Converter="{StaticResource InvertBoolConverter}" IsAsync="True"/>
    </metro:MetroWindow.IsMinButtonEnabled>

    <metro:MetroWindow.IsMaxRestoreButtonEnabled>
        <Binding Path="IsOpen" ElementName="LoginDialogHost" Converter="{StaticResource InvertBoolConverter}" IsAsync="True"/>
    </metro:MetroWindow.IsMaxRestoreButtonEnabled>

    <metro:MetroWindow.IconTemplate>
        <DataTemplate>
            <Border Margin="1,1">
                <Image Width="24" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center" Source="../../Resources/Styles/Images/UiPath-Logo-inverted.png">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.IsDialogOpen, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" Value="True">
                                    <Setter Property="Opacity" Value="0.3" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.IsDialogOpen, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" Value="False">
                                    <Setter Property="Opacity" Value="1" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Border>
        </DataTemplate>
    </metro:MetroWindow.IconTemplate>
</metro:MetroWindow>
